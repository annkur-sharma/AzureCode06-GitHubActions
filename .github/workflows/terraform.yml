name: Terraform CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  terraform-init-validate:
    name: 'Terraform Init Validate'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform Init
        id: init
        working-directory: INFRA01
        continue-on-error: false
        run: terraform init -backend-config="backend-config-infra01.hcl"
        env:
          ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true
          
      - name: Terraform Validate
        id: validate
        working-directory: INFRA01
        run: terraform validate

  terraform-init-fmt-plan:
    name: 'Terraform Init Fmt Plan'
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: terraform-init-validate
    environment: dev

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform Init
        id: init
        working-directory: INFRA01
        continue-on-error: false
        run: terraform init -backend-config="backend-config-infra01.hcl"
        env:
          ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Fmt
        id: fmt
        working-directory: INFRA01
        run: terraform fmt -check -diff

      - name: Terraform Plan
        id: plan
        working-directory: INFRA01
        run: terraform plan -out=tfplan

      - name: Upload plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: INFRA01/tfplan

  terraform-init-apply:
    name: 'Terraform Init Apply'
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: terraform-init-fmt-plan
    environment: prod

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform Init
        id: init
        working-directory: INFRA01
        continue-on-error: false
        run: terraform init -backend-config="backend-config-infra01.hcl"
        env:
          ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Download plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: INFRA01

      - name: Terraform Apply
        working-directory: INFRA01
        run: terraform apply -auto-approve tfplan
        